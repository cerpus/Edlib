name: "AWS Deploy"

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy'
        required: true
      environment:
        description: 'Environment to deploy to'
        required: true
        default: "cerpus_test"

jobs:
  deploy:
    environment: "${{ github.event.inputs.environment }}"
    runs-on: ubuntu-latest
    steps:
      - name: Create slack message
        uses: actions/github-script@v5
        id: slack-message
        with:
          script: |
            const isSemver = /^([0-9]+)\.([0-9]+)\.([0-9]+)$/.test(
              "${{ github.event.inputs.version }}"
            );

            const versionOrRef = isSemver ? "Version" : "Ref";

            const fields = [
              {
                title: versionOrRef,
                value:
                  "<https://github.com/cerpus/Edlib/tree/${{ github.event.inputs.version }}|${{ github.event.inputs.version }}>",
                short: true,
              },
              {
                title: "Environment",
                value: "${{ github.event.inputs.environment }}",
                short: true,
              },
            ];

            if (isSemver) {
              fields.push({
                title: "Release note",
                value:
                  "<https://github.com/cerpus/Edlib/releases/tag/${{ github.event.inputs.version }}|${{ github.event.inputs.version }}>",
                short: true,
              });
            }

            const slackMessage = {
              attachments: [
                {
                  fallback:
                    versionOrRef +
                    " *<https://github.com/cerpus/Edlib/tree/${{ github.event.inputs.version }}|${{ github.event.inputs.version }}>* has been deployed to *${{ github.event.inputs.environment }}* by ${{ github.actor }}.",
                  color: "#36a64f",
                  title: "Edlib",
                  title_link: "https://github.com/cerpus/Edlib",
                  text:
                    versionOrRef +
                    "*<https://github.com/cerpus/Edlib/tree/${{ github.event.inputs.version }}|${{ github.event.inputs.version }}>* has been deployed to *${{ github.event.inputs.environment }}* by ${{ github.actor }}.",
                  fields: fields,
                  footer: "Edlib deploy bot",
                  ts: 1234567899,
                },
              ],
            };

            return JSON.stringify(slackMessage);
          result-encoding: string

      - name: Deploy name
        run: |
          echo "${{ steps.slack-message.outputs.result }}"
          echo "Version to deploy: ${{ github.event.inputs.version }}"
          exit 1

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.version }}
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 3600
          role-session-name: GithubCerpusDevDeploy

      - name: Update kubeconfig with cluster info
        id: kube
        run: |
          aws eks --region eu-west-1 update-kubeconfig --name ${{ secrets.AWS_EKS_CLUSTER_NAME }}
          CONFIG="$(base64 -w 0 ${HOME}/.kube/config)"
          echo "::set-output name=config::$CONFIG"

      - name: Update Chart.yaml with correct app version
        run: |
          echo "" >> ./chart/Chart.yaml
          echo "appVersion: \"${{ github.event.inputs.version }}\"" >> ./chart/Chart.yaml
          cat ./chart/Chart.yaml

      - name: Create values string for helm command
        id: helm-values
        run: |
          HELM_VALUES="-f ./chart/values.yaml "
          if [ -f "./chart/values/${{ github.event.inputs.environment }}.yaml" ]; then
            HELM_VALUES="$HELM_VALUES -f ./chart/values/${{ github.event.inputs.environment }}.yaml "
          fi
          echo $HELM_VALUES
          echo "::set-output name=helm-values::$HELM_VALUES"

      - name: helm deploy
        uses: koslib/helm-eks-action@master
        env:
          KUBE_CONFIG_DATA: '${{ steps.kube.outputs.config }}'
        with:
          command: helm upgrade ${{ steps.helm-values.outputs.helm-values }} --wait --timeout 60m --cleanup-on-fail --install edlib --namespace edlib ./chart

      - name: Post message to slack
        run: |
          DATA='{"blocks":[{"type":"section","text":{"type":"mrkdwn","text":"*<https:\/\/github.com\/cerpus\/Edlib|Edlib>*"}},{"type":"section","text":{"type":"mrkdwn","text":"Versjon *<https:\/\/github.com\/cerpus\/Edlib\/tree\/${{ github.event.inputs.version }}|${{ github.event.inputs.version }}>* er lagt ut i *${{ github.event.inputs.environment }}* av ${{ github.actor }}\nDu finner release note <https:\/\/github.com\/cerpus\/Edlib\/releases\/tag\/${{ github.event.inputs.version }}|her>."}}]}'
          curl -X POST -H 'Content-type: application/json' --data "$DATA" "${{ secrets.SLACK_HOOK_URL }}"

          if [ -n "${{ secrets.EXTRA_SLACK_HOOK_URL }}" ]; then
            curl -X POST -H 'Content-type: application/json' --data "$DATA" "${{ secrets.EXTRA_SLACK_HOOK_URL }}"
          fi
