name: "api-resources"

on:
  push:
    paths:
      - "sourcecode/apis/resources/**"
      - ".github/workflows/api-resources.yaml"

env:
  workingDirectory: sourcecode/apis/resources

jobs:
  build_test_pushdocker:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2
        - name: Use Node.js 14
          uses: actions/setup-node@v2
          with:
            node-version: 14
        - name: Get release name
          run: |
            RELEASE_NAME=""
            if [ "${{ github.ref }}" = "refs/heads/beta" ]; then
              RELEASE_NAME="beta-"
            fi
            SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`
            RELEASE_NAME="$RELEASE_NAME$SHORT_SHA"

            echo '::set-output name=RELEASE_NAME::$RELEASE_NAME'
#        - name: "Yarn install with cache"
#          uses: bahmutov/npm-install@v1
#          with:
#            working-directory: ${{ env.workingDirectory }}
#        - name: "Run tests"
#          run: cd ${{ env.workingDirectory }}; yarn test
#          shell: bash
#
#        - name: Set up Docker Buildx
#          uses: docker/setup-buildx-action@v1
#        - name: Login to GitHub docker registry
#          uses: docker/login-action@v1
#          with:
#            registry: ghcr.io
#            username: ${{ github.actor }}
#            password: ${{ secrets.GITHUB_TOKEN }}
#        - name: Build and push app
#          id: docker_build_app
#          uses: docker/build-push-action@v2
#          with:
#            push: true
#            tags: ghcr.io/cerpus/edlib/api-resources-app:${{ github.sha }}
#            context: sourcecode/apis/resources
#            target: prod
#        - name: Build and push migration container
#          id: docker_build_migration
#          uses: docker/build-push-action@v2
#          with:
#            push: true
#            tags: ghcr.io/cerpus/edlib/api-resources-migration:${{ github.sha }}
#            context: sourcecode/apis/resources
#            target: migrations
#        - name: Image digest
#          run: echo ${{ steps.docker_build.outputs.digest }}
