name: "api-resources"

on:
  push:
    paths:
      - "versions/**"
      - "sourcecode/apis/resources/**"
      - ".github/workflows/api-resources.yaml"

env:
  workingDirectory: sourcecode/apis/resources

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: "Yarn install with cache"
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ${{ env.workingDirectory }}

      - name: "Run tests"
        run: cd ${{ env.workingDirectory }}; node node_modules/jest/bin/jest.js --runInBand --colors --verbose --forceExit --config=./jest.config.json
        shell: bash

  check_if_should_release:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      should-release: ${{ steps.release-after-check.outputs.should-release || 'no' }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get specific changed files
        id: changed-files
        uses: tj-actions/changed-files@v9.2
        with:
          files: |
            versions/beta
            versions/official

      - name: Set should release to true if conditions are met
        id: release-after-check
        if: (contains(steps.changed-files.outputs.modified_files, 'versions/beta') && github.ref == 'refs/heads/beta') || (contains(steps.changed-files.outputs.modified_files, 'versions/official') && github.ref == 'refs/heads/master')
        run: |
          echo "::set-output name=should-release::yes"

  release:
    runs-on: ubuntu-latest
    needs: check_if_should_release
    if: needs.check_if_should_release.outputs.should-release == 'yes'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get release name
        id: releaseName
        uses: ./.github/actions/nodeJsApi

      - name: Display release name
        run: |
          echo "Releasing ${{ steps.releaseName.outputs.release-name }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub docker registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push app
        id: docker_build_app
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/cerpus/edlib/api-resources-app:${{ steps.releaseName.outputs.release-name }}
          context: sourcecode/apis/resources
          target: prod

      - name: Build and push migration container
        id: docker_build_migration
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/cerpus/edlib/api-resources-migration:${{ steps.releaseName.outputs.release-name }}
          context: sourcecode/apis/resources
          target: migrations

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
