name: "api-auth"

on:
  push:
    paths:
      - "sourcecode/apis/auth/**"
      - ".github/workflows/api-auth.yaml"
  workflow_call:
    inputs:
      versionToRelease:
        description: 'A version to release'
        required: true
        type: string

env:
  workingDirectory: sourcecode/apis/auth

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0

        - name: Use Node.js 16
          uses: actions/setup-node@v2
          with:
            node-version: 16

        - name: "Yarn install with cache"
          uses: bahmutov/npm-install@v1
          with:
            working-directory: ${{ env.workingDirectory }}

        - name: "Run tests"
          run: cd ${{ env.workingDirectory }}; node node_modules/jest/bin/jest.js --runInBand --colors --verbose --forceExit --config=./jest.config.json
          shell: bash

        - name: "echo"
          run: |
            echo "${{ github.event_name }}"
            echo "${{ github.ref }}"
            echo "${{ github.sha }}"
            echo "${{ github.actor }}"
            echo "${{ secrets.GITHUB_TOKEN }}"
          shell: bash

  release:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'workflow_dispatch'
    steps:
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0

        - name: Get release name
          id: releaseName
          uses: ./.github/actions/nodeJsApi

        - name: Display release name
          run: |
            echo "Releasing ${{ inputs.versionToRelease }}"

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Login to GitHub docker registry
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Build and push app
          id: docker_build_app
          uses: docker/build-push-action@v2
          with:
            push: true
            tags: ghcr.io/cerpus/edlib/api-auth-app:${{ inputs.versionToRelease }}
            context: sourcecode/apis/auth
            target: prod

        - name: Build and push migration container
          id: docker_build_migration
          uses: docker/build-push-action@v2
          with:
            push: true
            tags: ghcr.io/cerpus/edlib/api-auth-migration:${{ inputs.versionToRelease }}
            context: sourcecode/apis/auth
            target: migrations

        - name: Image digest
          run: echo ${{ steps.docker_build.outputs.digest }}
