name: "www"

on:
  push:
    paths:
      - "sourcecode/www/**"
      - ".github/workflows/www.yaml"
  workflow_call:
    inputs:
      versionToRelease:
        description: 'A version to release'
        required: true
        type: string
    secrets:
      AWS_DOCKER_REGISTRY_ACCESS_KEY_ID:
        required: true
      AWS_DOCKER_REGISTRY_SECRET_ACCESS_KEY:
        required: true

env:
  workingDirectory: sourcecode/www

jobs:
  lint_and_create_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build base image
        uses: docker/build-push-action@v2
        with:
          tags: "build:latest"
          outputs: "type=docker"
          context: ${{ env.workingDirectory }}
          target: base
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: "Run eslint"
        run: docker run build yarn lint
        shell: bash

      - name: Configure AWS Credentials
        if: ${{ inputs.versionToRelease }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_DOCKER_REGISTRY_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_DOCKER_REGISTRY_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
          role-duration-seconds: 3600
          role-session-name: GithubCerpusPushImage

      - name: Login to AWS docker registry
        if: ${{ inputs.versionToRelease }}
        shell: bash
        run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

      - name: Build and push app
        if: ${{ inputs.versionToRelease }}
        id: docker_build_app
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: public.ecr.aws/f0t8l9h1/www-app:${{ inputs.versionToRelease }}
          context: sourcecode/www
          target: prod
          cache-from: type=gha
          cache-to: type=gha,mode=max
