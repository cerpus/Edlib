name: "Create release"

on:
  workflow_dispatch:
    inputs:
      releaseName:
        description: 'Name of release'
        required: false
        default: ''

jobs:
  get_variables:
    runs-on: ubuntu-latest
    outputs:
      releaseRef: ${{ steps.get_ref.outputs.releaseRef }}
    steps:
      - name: Get the ref
        id: get_ref
        run: |
          ref=$GITHUB_SHA
          if [ -n "${{ github.event.inputs.releaseName }}" ]; then
            ref="${{ github.event.inputs.releaseName }}"
          fi

          echo "::set-output name=releaseRef::$ref"

# ---------- APIS -----------------
  release_api_auth:
    needs: get_variables
    uses: cerpus/Edlib/.github/workflows/api-auth.yaml@improve-release
    with:
      versionToRelease: ${{ needs.get_variables.outputs.releaseRef }}
  release_api_common:
    needs: get_variables
    uses: cerpus/Edlib/.github/workflows/api-common.yaml@improve-release
    with:
      versionToRelease: ${{ needs.get_variables.outputs.releaseRef }}
  release_api_doku:
    needs: get_variables
    uses: cerpus/Edlib/.github/workflows/api-doku.yaml@improve-release
    with:
      versionToRelease: ${{ needs.get_variables.outputs.releaseRef }}
  release_api_lti:
    needs: get_variables
    uses: cerpus/Edlib/.github/workflows/api-lti.yaml@improve-release
    with:
      versionToRelease: ${{ needs.get_variables.outputs.releaseRef }}
  release_api_resources:
    needs: get_variables
    uses: cerpus/Edlib/.github/workflows/api-resources.yaml@improve-release
    with:
      versionToRelease: ${{ needs.get_variables.outputs.releaseRef }}
  release_api_url:
    needs: get_variables
    uses: cerpus/Edlib/.github/workflows/api-url.yaml@improve-release
    with:
      versionToRelease: ${{ needs.get_variables.outputs.releaseRef }}

# ---------- Proxies -----------------
  release_proxy_admin:
    needs: get_variables
    uses: cerpus/Edlib/.github/workflows/proxy-admin.yaml@improve-release
    with:
      versionToRelease: ${{ needs.get_variables.outputs.releaseRef }}
  release_proxy_auth:
    needs: get_variables
    uses: cerpus/Edlib/.github/workflows/proxy-auth.yaml@improve-release
    with:
      versionToRelease: ${{ needs.get_variables.outputs.releaseRef }}
  release_proxy_doku:
    needs: get_variables
    uses: cerpus/Edlib/.github/workflows/proxy-doku.yaml@improve-release
    with:
      versionToRelease: ${{ needs.get_variables.outputs.releaseRef }}
  release_proxy_iframe:
    needs: get_variables
    uses: cerpus/Edlib/.github/workflows/proxy-iframe.yaml@improve-release
    with:
      versionToRelease: ${{ needs.get_variables.outputs.releaseRef }}
  release_proxy_lti:
    needs: get_variables
    uses: cerpus/Edlib/.github/workflows/proxy-lti.yaml@improve-release
    with:
      versionToRelease: ${{ needs.get_variables.outputs.releaseRef }}
  release_proxy_recommendation:
    needs: get_variables
    uses: cerpus/Edlib/.github/workflows/proxy-recommendation.yaml@improve-release
    with:
      versionToRelease: ${{ needs.get_variables.outputs.releaseRef }}
  release_proxy_resource:
    needs: get_variables
    uses: cerpus/Edlib/.github/workflows/proxy-resource.yaml@improve-release
    with:
      versionToRelease: ${{ needs.get_variables.outputs.releaseRef }}
  release_proxy_url:
    needs: get_variables
    uses: cerpus/Edlib/.github/workflows/proxy-url.yaml@improve-release
    with:
      versionToRelease: ${{ needs.get_variables.outputs.releaseRef }}

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.event.inputs.releaseName != ''
    needs:
      - release_api_auth
      - release_api_common
      - release_api_doku
      - release_api_lti
      - release_api_resources
      - release_api_url
      - release_proxy_admin
      - release_proxy_auth
      - release_proxy_doku
      - release_proxy_iframe
      - release_proxy_lti
      - release_proxy_recommedation
      - release_proxy_resource
      - release_proxy_url
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Create tag
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ github.event.inputs.releaseName }}",
              sha: context.sha
            })

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ github.event.inputs.releaseName }}
          release_name: Release ${{ github.event.inputs.releaseName }}
          body: |
            Remember to update this with a release note
          draft: true
          prerelease: false
