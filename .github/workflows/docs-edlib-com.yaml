name: "docs-edlib-com"

on:
  push:
    paths:
      - "sourcecode/docs/docs.edlib.com/**"
      - ".github/workflows/docs-edlib-com.yaml"
  workflow_call:
    inputs:
      versionToRelease:
        description: 'A version to release'
        required: true
        type: string
    secrets:
      AWS_DOCKER_REGISTRY_ACCESS_KEY_ID:
        required: true
      AWS_DOCKER_REGISTRY_SECRET_ACCESS_KEY:
        required: true

env:
  workingDirectory: sourcecode/docs/docs.edlib.com
  shouldPublishImage: ${{ inputs.versionToRelease && '1' || '0' }}

jobs:
  test_and_release:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3
        - name: Use Node.js 14
          uses: actions/setup-node@v3
          with:
            node-version: 14

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Build to ensure everything works
          uses: docker/build-push-action@v2
          with:
            tags: "build:latest"
            context: ${{ env.workingDirectory }}
            target: build
            cache-from: type=gha
            cache-to: type=gha,mode=max

        - name: Configure AWS Credentials
          if: env.shouldPublishImage == '1'
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_DOCKER_REGISTRY_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_DOCKER_REGISTRY_SECRET_ACCESS_KEY }}
            aws-region: eu-west-1
            role-duration-seconds: 3600
            role-session-name: GithubCerpusPushImage

        - name: Login to AWS docker registry
          if: env.shouldPublishImage == '1'
          shell: bash
          run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

        - name: Build and push app
          if: env.shouldPublishImage == '1'
          id: docker_build_app
          uses: docker/build-push-action@v2
          with:
            push: true
            tags: public.ecr.aws/f0t8l9h1/docs-edlib-com:${{ inputs.versionToRelease }}
            context: ${{ env.workingDirectory }}
            target: prod
            cache-from: type=gha
            cache-to: type=gha,mode=max
