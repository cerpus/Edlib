name: "API - Content Author"

on:
  push:
    paths:
      - "sourcecode/apis/contentauthor/**"
      - ".github/workflows/api-contentauthor.yaml"
  workflow_call:
    inputs:
      versionToRelease:
        description: 'A version to release'
        required: true
        type: string

env:
  workingDirectory: sourcecode/apis/contentauthor

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build test image
        run: |
          cd ${{ env.workingDirectory }}
          docker buildx build --target test -t contentauthor-test .

      - name: Run tests
        run: |
          cd ${{ env.workingDirectory }}
          mkdir -p test-storage-volume
          docker run --volume `pwd`"/test-storage-volume:/storage" contentauthor-test

      - name: Upload artifacts
        uses: actions/upload-artifact@master
        if: failure()
        with:
          name: Logs
          path: ${{ env.workingDirectory }}/test-storage-volume

  create_release:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub docker registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push app container
        id: docker_build_web
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/cerpus/edlib/api-contentauthor-app:${{ inputs.versionToRelease }}
          context: sourcecode/apis/contentauthor
          target: app

      - name: Build and push init container
        id: docker_build_fpm
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/cerpus/edlib/api-contentauthor-init:${{ inputs.versionToRelease }}
          context: sourcecode/apis/contentauthor
          target: init

      - name: Build and push phpfpm container
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/cerpus/edlib/api-contentauthor-phpfpm:${{ inputs.versionToRelease }}
          context: sourcecode/apis/contentauthor
          target: phpfpm

      - name: Build and push cron container
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/cerpus/edlib/api-contentauthor-cron:${{ inputs.versionToRelease }}
          context: sourcecode/apis/contentauthor
          target: cron

      - name: Build and push deploy container
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/cerpus/edlib/api-contentauthor-deploy:${{ inputs.versionToRelease }}
          context: sourcecode/apis/contentauthor
          target: deploy

      - name: Build and push edstepmessages container
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/cerpus/edlib/api-contentauthor-edstepmessages:${{ inputs.versionToRelease }}
          context: sourcecode/apis/contentauthor
          target: edstepmessages

      - name: Build and push horizonqueue container
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/cerpus/edlib/api-contentauthor-horizonqueue:${{ inputs.versionToRelease }}
          context: sourcecode/apis/contentauthor
          target: horizonqueue
