{{- define "apis.contentauthor.env" }}
env:
  - name: "APP_KEY"
    value: {{ .Values.contentauthor.appKey | quote }}
  - name: "APP_ENV"
    value: "production"
  - name: "MAIL_DRIVER"
    value: "smtp"
  - name: "MAIL_HOST"
    value: "smtpout-dkim.cerpus.net"
  - name: "MAIL_ENCRYPTION"
    value: "none"
  - name: "APP_DEBUG"
    value: {{ .Values.enableDebug | quote }}
  - name: "AWS_DEFAULT_REGION"
    value: {{ .Values.contentauthor.awsStorage.region | quote }}
  - name: "AWS_BUCKET"
    value: {{ .Values.contentauthor.awsStorage.bucket | quote }}
{{ if .Values.contentauthor.cdnWithPrefix }}
  - name: "CDN_WITH_PREFIX"
    value: {{ .Values.contentauthor.cdnWithPrefix | quote }}
{{ end }}
  - name: "QUESTIONBANK_SERVICE_URL"
    value: "http://questionbankservice:8080"
  - name: "IMAGESERVICE_URL"
    value: "http://imagestorageservice:8080"
  - name: "CERPUS_JWT_CONTEXTS"
    value: "edlib"
  - name: "CERPUS_JWT_EDLIB_PUBKEY"
    value: "http://authapi/.well-known/jwks.json"
  - name: "CERPUS_JWT_EDLIB_TYPE"
    value: "edlib"
  - name: "CERPUS_JWT_EDLIB_EXPIRATION_LEEWAY_SECONDS"
    value: "36000"
  - name: "H5P_CONSUMER_KEY"
    value: {{ .Values.contentauthor.h5pConsumerKey | quote }}
  - name: "H5P_CONSUMER_SECRET"
    value: {{ .Values.contentauthor.h5pConsumerSecret | quote }}
{{ if .Values.contentauthor.extraEnvs }}
{{- range $k, $v := .Values.contentauthor.extraEnvs }}
  - name: {{ $k | quote }}
    value: {{ $v | quote }}
{{- end }}
{{- end }}
{{- end }}
---
kind: Job
apiVersion: batch/v1
metadata:
  name: contentauthor-startup
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: startup
          image: "public.ecr.aws/f0t8l9h1/api-contentauthor-deploy:{{ .Chart.AppVersion }}"
{{- include "apis.contentauthor.env" . | indent 10 }}
          envFrom:
            - configMapRef:
                name: common-v2
                optional: true
            - secretRef:
                name: common-v2
                optional: true
---
{{- template "helpers.service" (dict "name" "contentauthor") }}
---
{{- template "helpers.horizontalPodAutoscaler" (dict "name" "contentauthor" "minReplicaCount" .Values.minReplicaCount ) }}
---
{{- template "helpers.podDisruptionBudget" (dict "name" "contentauthor" ) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contentauthor
spec:
  selector:
    matchLabels:
      app: contentauthor
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: contentauthor
        fluentd-parser: laravel-json
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - contentauthor
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - name: nginx
          image: "public.ecr.aws/f0t8l9h1/api-contentauthor-app:{{ .Chart.AppVersion }}"
{{- include "apis.contentauthor.env" . | indent 10 }}
          envFrom:
            - configMapRef:
                name: common-v2
                optional: false
            - secretRef:
                name: common-v2
                optional: false
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            periodSeconds: 3
            failureThreshold: 10
          resources:
            limits:
              cpu: 500m
              memory: 1500Mi
            requests:
              cpu: 20m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - name: phpfpm
          image: "public.ecr.aws/f0t8l9h1/api-contentauthor-phpfpm:{{ .Chart.AppVersion }}"
{{- include "apis.contentauthor.env" . | indent 10 }}
          envFrom:
            - configMapRef:
                name: common-v2
                optional: false
            - secretRef:
                name: common-v2
                optional: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      serviceAccount: contentauthor
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contentauthor-horizon
spec:
  replicas: 1
  selector:
    matchLabels:
      app: contentauthor-horizon
  template:
    metadata:
      labels:
        app: contentauthor-horizon
        fluentd-parser: laravel-json
    spec:
      containers:
        - name: main
          image: "public.ecr.aws/f0t8l9h1/api-contentauthor-phpfpm:{{ .Chart.AppVersion }}"
          command:
            - php
            - artisan
            - horizon
{{- include "apis.contentauthor.env" . | indent 10 }}
          envFrom:
            - configMapRef:
                name: common-v2
                optional: false
            - secretRef:
                name: common-v2
                optional: false
          resources:
            limits:
              cpu: 500m
              memory: 1500Mi
            requests:
              cpu: 20m
              memory: 200Mi
      serviceAccount: contentauthor
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contentauthor-rabbitmq-subscriber
spec:
  replicas: 1
  selector:
    matchLabels:
      app: contentauthor-rabbitmq-subscriber
  template:
    metadata:
      labels:
        app: contentauthor-rabbitmq-subscriber
        fluentd-parser: laravel-json
    spec:
      containers:
        - name: main
          image: "public.ecr.aws/f0t8l9h1/api-contentauthor-phpfpm:{{ .Chart.AppVersion }}"
          command:
            - php
            - artisan
            - laravel-rabbitmq-pubsub:consumer
{{- include "apis.contentauthor.env" . | indent 10 }}
          envFrom:
            - configMapRef:
                name: common-v2
                optional: false
            - secretRef:
                name: common-v2
                optional: false
          resources:
            limits:
              cpu: 500m
              memory: 1500Mi
            requests:
              cpu: 20m
              memory: 200Mi
      serviceAccount: contentauthor
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: contentauthor-cron
spec:
  schedule: "*/1 * * * *"
  concurrencyPolicy: "Forbid"
  startingDeadlineSeconds: 60
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: contentauthor-cron
            fluentd-parser: laravel-json
        spec:
          containers:
            - name: main
              image: "public.ecr.aws/f0t8l9h1/api-contentauthor-phpfpm:{{ .Chart.AppVersion }}"
              command:
                - php
                - /app/artisan
                - schedule:run
                - -q
{{- include "apis.contentauthor.env" . | indent 14 }}
              envFrom:
                - configMapRef:
                    name: common-v2
                    optional: false
                - secretRef:
                    name: common-v2
                    optional: false
              resources:
                limits:
                  cpu: 500m
                  memory: 1500Mi
                requests:
                  cpu: 20m
                  memory: 200Mi
          serviceAccount: contentauthor
          restartPolicy: "Never"
