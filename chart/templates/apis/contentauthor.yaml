{{- template "helpers.initJob" (dict "name" "contentauthor" "image" "public.ecr.aws/f0t8l9h1/api-contentauthor-deploy" "imageTag" .Chart.AppVersion "envFromConfig" (list "ca-config") "envFromSecret" (list "ca-secret") ) }}
---
{{- template "helpers.service" (dict "name" "contentauthor") }}
---
{{- template "helpers.horizontalPodAutoscaler" (dict "name" "contentauthor" "minReplicaCount" .Values.minReplicaCount ) }}
---
{{- template "helpers.podDisruptionBudget" (dict "name" "contentauthor" ) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contentauthor
spec:
  selector:
    matchLabels:
      app: contentauthor
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: contentauthor
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - contentauthor
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - name: main
          image: "public.ecr.aws/f0t8l9h1/api-contentauthor-app:{{ .Chart.AppVersion }}"
          env:
            - name: STARTUP_CONTAINER_ENABLED
              value: "1"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          envFrom:
            - secretRef:
                name: ca-secret
                optional: true
            - configMapRef:
                name: ca-config
                optional: true
            - configMapRef:
                name: common-config
                optional: false
            - secretRef:
                name: common-secret
                optional: false
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 80
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /health
              port: 80
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 1500Mi
            requests:
              cpu: 20m
              memory: 200Mi
          startupProbe:
            failureThreshold: 100
            httpGet:
              path: /health
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /storage
              name: storage-ca
        - name: cron
          image: "public.ecr.aws/f0t8l9h1/api-contentauthor-cron:{{ .Chart.AppVersion }}"
          env:
            - name: STARTUP_CONTAINER_ENABLED
              value: "1"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          envFrom:
            - secretRef:
                name: ca-secret
                optional: true
            - configMapRef:
                name: ca-config
                optional: true
            - configMapRef:
                name: common-config
                optional: false
            - secretRef:
                name: common-secret
                optional: false
          imagePullPolicy: IfNotPresent
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /storage
              name: storage-ca
        - name: horizonqueue
          image: "public.ecr.aws/f0t8l9h1/api-contentauthor-horizonqueue:{{ .Chart.AppVersion }}"
          env:
            - name: STARTUP_CONTAINER_ENABLED
              value: "1"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          envFrom:
            - secretRef:
                name: ca-secret
                optional: true
            - configMapRef:
                name: ca-config
                optional: true
            - configMapRef:
                name: common-config
                optional: false
            - secretRef:
                name: common-secret
                optional: false
          imagePullPolicy: IfNotPresent
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /storage
              name: storage-ca
        - name: phpfpm
          image: "public.ecr.aws/f0t8l9h1/api-contentauthor-phpfpm:{{ .Chart.AppVersion }}"
          env:
            - name: STARTUP_CONTAINER_ENABLED
              value: "1"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          envFrom:
            - secretRef:
                name: ca-secret
                optional: true
            - configMapRef:
                name: ca-config
                optional: true
            - configMapRef:
                name: common-config
                optional: false
            - secretRef:
                name: common-secret
                optional: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /storage
              name: storage-ca
      initContainers:
        - name: init
          image: "public.ecr.aws/f0t8l9h1/api-contentauthor-init:{{ .Chart.AppVersion }}"
          env:
            - name: STARTUP_CONTAINER_ENABLED
              value: "0"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          envFrom:
            - secretRef:
                name: ca-secret
                optional: true
            - configMapRef:
                name: ca-config
                optional: true
            - configMapRef:
                name: common-config
                optional: false
            - secretRef:
                name: common-secret
                optional: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /storage
              name: storage-ca
      serviceAccount: contentauthor
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: storage-ca
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contentauthor-rabbitmq-subscriber
spec:
  replicas: 1
  selector:
    matchLabels:
      app: contentauthor-rabbitmq-subscriber
  template:
    metadata:
      labels:
        app: contentauthor-rabbitmq-subscriber
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      containers:
        - name: main
          image: "public.ecr.aws/f0t8l9h1/api-contentauthor-phpfpm:{{ .Chart.AppVersion }}"
          command:
            - php
            - artisan
            - laravel-rabbitmq-pubsub:consumer
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          envFrom:
            - secretRef:
                name: ca-secret
                optional: true
            - configMapRef:
                name: ca-config
                optional: true
            - configMapRef:
                name: common-config
                optional: false
            - secretRef:
                name: common-secret
                optional: false
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 500m
              memory: 1500Mi
            requests:
              cpu: 20m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /storage
              name: storage-ca
      initContainers:
        - name: init
          image: "public.ecr.aws/f0t8l9h1/api-contentauthor-init:{{ .Chart.AppVersion }}"
          env:
            - name: STARTUP_CONTAINER_ENABLED
              value: "0"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          envFrom:
            - secretRef:
                name: ca-secret
                optional: true
            - configMapRef:
                name: ca-config
                optional: true
            - configMapRef:
                name: common-config
                optional: false
            - secretRef:
                name: common-secret
                optional: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /storage
              name: storage-ca
      serviceAccount: contentauthor
      volumes:
        - emptyDir: {}
          name: storage-ca
