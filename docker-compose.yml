version: "3.7"

volumes:
  dokuapi_nodemodules:
  edlib-auth_nodemodules:
  edlib-lti_nodemodules:
  edlib-resources_nodemodules:
  edlib-url_nodemodules:
  edlibapi-url_nodemodules:
  elasticsearch:
  maven_cache:
  mysql:
  npm-components-storybook_nodemodules:
  proxy-admin_nodemodules:
  proxy-auth_nodemodules:
  proxy-lti_nodemodules:
  proxy-resource_nodemodules:
  www_nodemodules:
  api_contentauthor-main_bucket:

services:
  redis:
    image: "redis:alpine"
    healthcheck:
      test: [CMD, redis-cli, ping]
    ports:
      - "6379:6379"

  postgres:
    image: postgres:11-alpine
    healthcheck:
      test:
        [
          CMD,
          psql,
          -d,
          "postgres://postgres:thepgpassword@localhost:5432",
          -c,
          "select 1",
        ]
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
      - ./localSetup/projects/postgres/postgresinit.d:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: thepgpassword
    ports:
      - 5432:5432

  mysql:
    image: mariadb:10.5.12
    environment:
      MYSQL_ROOT_PASSWORD: mysqlpassword
      MYSQL_INITDB_SKIP_TZINFO: 1
    healthcheck:
      test: [CMD, mysql, -uroot, -pmysqlpassword, "-eSELECT 1"]
    command: --init-file /data/application/init.sql
    volumes:
      - ./localSetup/projects/mysql/init.sql:/data/application/init.sql
      - mysql:/var/lib/mysql
    ports:
      - "3306:3306"

  rabbitmq:
    image: rabbitmq:3-management
    healthcheck:
      test: [CMD, rabbitmq-diagnostics, -q, ping]
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.9.0"
    depends_on:
      - elasticsearch_password
    healthcheck:
      test: [CMD, curl, -f, http://localhost:9200/_cat/health]
    volumes:
      - ./data/elasticsearch/secrets:/run/secrets
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    environment:
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      ELASTIC_PASSWORD_FILE: "/run/secrets/password.txt"

  elasticsearch_password:
    image: alpine
    command: ['generate-password', 'password.txt']
    volumes:
      - ./data/elasticsearch/secrets:/run/secrets
      - ./scripts/generate-password.sh:/usr/local/bin/generate-password
    working_dir: /run/secrets

  nginx:
    build: ./localSetup/projects/nginx
    healthcheck:
      test: [CMD, curl, -fk, https://localhost]
    volumes:
      - ./localSetup/projects/nginx/nginx-conf.d:/etc/nginx/conf.d:ro
      - ./localSetup/projects/nginx/generate-certs.sh:/docker-entrypoint.d/generate-certs.sh:ro
      - ./data/nginx/ca:/etc/ca
      - ./data/nginx/certs:/etc/ssl/private
      - ./sourcecode/apis/common/public:/var/www/edlibcommon/public
    ports:
      - "80:80"
      - "443:443"
    networks:
      default:
        aliases:
          - contentauthor.local
          - api.edlib.local
          - edlibcommon

  versionapi:
    image: maven:3-openjdk-11
    command:
      [
        sh,
        -c,
        '/start-scripts/wait-for-it.sh postgres:5432; mvn spring-boot:run -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,address=*:5504,suspend=n,server=y"',
      ]
    volumes:
      - maven_cache:/root/.m2
      - ./sourcecode/apis/version/:/app
      - ./localSetup/helpers/start-scripts:/start-scripts:ro
    environment:
      HEAPSPACE_MAX: 128m
      DEBUGGING_ENABLED: "yes"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres/versionapi"
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: thepgpassword
    depends_on:
      - postgres
    healthcheck:
      test: [CMD, curl, -f, http://localhost/health]
    #ports:
    #  - "5504:5504"  # debug port
    working_dir: /app

  contentauthor:
    build:
      context: ./sourcecode/apis/contentauthor
      target: app
    healthcheck:
      test: [CMD, curl, -f, http://localhost]
    volumes:
      - ./sourcecode/apis/contentauthor/public:/app/public
      - ./sourcecode/apis/contentauthor/storage/app:/app/public/h5pstorage
      - ./sourcecode/apis/contentauthor/vendor:/app/vendor
    environment:
      PHP_FPM_HOST: "contentauthor-fpm:9000"
    depends_on:
      - contentauthor-fpm

  contentauthor-fpm:
    build:
      context: ./sourcecode/apis/contentauthor
      target: phpfpm-dev
    env_file:
      - ./localSetup/projects/content-author/.env
      - ./localSetup/.env
    command: /startup.sh
    healthcheck:
      test: [CMD, nc, -z, localhost, "9000"]
    volumes:
      - ./localSetup/helpers/start-scripts:/start-scripts
      - ./localSetup/projects/content-author/startup.sh:/startup.sh
      - ./sourcecode/apis/contentauthor:/app
      - ./data/nginx/ca:/usr/local/share/ca-certificates:ro
    depends_on:
      - mysql
      - redis
      - nginx
      - rabbitmq

  contentauthor-subscribers:
    build:
      context: ./sourcecode/apis/contentauthor
      target: phpfpm-dev
    env_file:
      - ./localSetup/projects/content-author/.env
      - ./localSetup/.env
    command: /bin/bash -c "set -eux;/start-scripts/wait-for-multiple.sh contentauthor-fpm:9000;php artisan laravel-rabbitmq-pubsub:consumer"
    volumes:
      - ./localSetup/helpers/start-scripts:/start-scripts
      - ./localSetup/projects/content-author/startup.sh:/startup.sh
      - ./sourcecode/apis/contentauthor:/app
      - ./data/nginx/ca:/usr/local/share/ca-certificates:ro
    depends_on:
      - contentauthor-fpm

  contentauthor-cron:
    build:
      context: ./sourcecode/apis/contentauthor
      dockerfile: Dockerfile
      target: phpfpm-dev
    command: /bin/bash -c "set -eu;/start-scripts/wait-for-multiple.sh contentauthor-fpm:9000;while true; do php /app/artisan schedule:run -q; sleep 60; done"
    env_file:
      - ./localSetup/projects/content-author/.env
      - ./localSetup/.env
    volumes:
      - ./localSetup/helpers/start-scripts:/start-scripts
      - ./sourcecode/apis/contentauthor:/app
    depends_on:
      - contentauthor-fpm

  contentauthor-horizonqueue:
    build:
      context: ./sourcecode/apis/contentauthor
      dockerfile: Dockerfile
      target: phpfpm-dev
    command: /bin/bash -c "set -eux;/start-scripts/wait-for-multiple.sh contentauthor-fpm:9000; php /app/artisan horizon"
    env_file:
      - ./localSetup/projects/content-author/.env
      - ./localSetup/.env
    volumes:
      - ./localSetup/helpers/start-scripts:/start-scripts
      - ./sourcecode/apis/contentauthor:/app
    depends_on:
      - contentauthor-fpm

  dokuapi:
    build:
      context: ./sourcecode/apis/doku
      dockerfile: Dockerfile
      target: dev
    env_file:
      - ./localSetup/.env
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
    command: "/bin/sh -c '/start-scripts/wait-for-multiple.sh mysql:3306 rabbitmq:5672;update-ca-certificates; yarn; yarn migrate; yarn dev'"
    healthcheck:
      test: [CMD, curl, -f, "http://localhost/_ah/health"]
    volumes:
      - dokuapi_nodemodules:/var/www/app/node_modules
      - ./sourcecode/apis/doku/src:/var/www/app/src
      - ./sourcecode/apis/doku/.env.defaults:/var/www/app/.env.defaults
      - ./sourcecode/apis/doku/package.json:/var/www/app/package.json
      - ./sourcecode/apis/doku/yarn.lock:/var/www/app/yarn.lock
      - ./localSetup/helpers/start-scripts:/start-scripts
    #      - ./sourcecode/npm/nodeUtils:/var/www/app/node_modules/@cerpus/edlib-node-utils:ro
    depends_on:
      - mysql

  resourceapi:
    build:
      context: ./sourcecode/apis/resources
      dockerfile: Dockerfile
      target: dev
    env_file:
      - ./localSetup/.env
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
    command: "/bin/sh -c '/start-scripts/wait-for-multiple.sh mysql:3306 rabbitmq:5672 elasticsearch:9200;update-ca-certificates; yarn; yarn migrate; yarn dev'"
    healthcheck:
      test: [CMD, curl, -f, "http://localhost/_ah/health"]
    volumes:
      - edlib-resources_nodemodules:/var/www/app/node_modules
      - ./sourcecode/apis/resources/src:/var/www/app/src
      - ./sourcecode/apis/resources/.env.defaults:/var/www/app/.env.defaults
      - ./sourcecode/apis/resources/package.json:/var/www/app/package.json
      - ./sourcecode/apis/resources/yarn.lock:/var/www/app/yarn.lock
      - ./localSetup/helpers/start-scripts:/start-scripts
    #      - ./sourcecode/npm/nodeUtils:/var/www/app/node_modules/@cerpus/edlib-node-utils:ro
    depends_on:
      - mysql

  resourceapi-subscribers:
    build:
      context: ./sourcecode/apis/resources
      dockerfile: Dockerfile
      target: dev
    env_file:
      - ./localSetup/.env
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
    command: "/bin/sh -c '/start-scripts/wait-for-multiple.sh resourceapi:80;update-ca-certificates; yarn dev:subscribers'"
    volumes:
      - edlib-resources_nodemodules:/var/www/app/node_modules
      - ./sourcecode/apis/resources/src:/var/www/app/src
      - ./sourcecode/apis/resources/.env.defaults:/var/www/app/.env.defaults
      - ./sourcecode/apis/resources/package.json:/var/www/app/package.json
      - ./sourcecode/apis/resources/yarn.lock:/var/www/app/yarn.lock
      - ./localSetup/helpers/start-scripts:/start-scripts
    #      - ./sourcecode/npm/nodeUtils:/var/www/app/node_modules/@cerpus/edlib-node-utils:ro
    depends_on:
      - resourceapi

  ltiapi:
    build:
      context: ./sourcecode/apis/lti
      dockerfile: Dockerfile
      target: dev
    env_file:
      - ./localSetup/.env
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
    command: "/bin/sh -c '/start-scripts/wait-for-multiple.sh mysql:3306 rabbitmq:5672;update-ca-certificates; yarn; yarn migrate; yarn dev'"
    healthcheck:
      test: [CMD, curl, -f, "http://localhost/_ah/health"]
    volumes:
      - edlib-lti_nodemodules:/var/www/app/node_modules
      - ./sourcecode/apis/lti/src:/var/www/app/src
      - ./sourcecode/apis/lti/.env.defaults:/var/www/app/.env.defaults
      - ./sourcecode/apis/lti/package.json:/var/www/app/package.json
      - ./sourcecode/apis/lti/yarn.lock:/var/www/app/yarn.lock
      - ./localSetup/helpers/start-scripts:/start-scripts
      - ./localSetup/projects/edlib-lti/configurations:/api-config:ro
    #      - ./sourcecode/npm/nodeUtils:/var/www/app/node_modules/@cerpus/edlib-node-utils:ro
    depends_on:
      - mysql

  ltiapi-subscribers:
    build:
      context: ./sourcecode/apis/lti
      dockerfile: Dockerfile
      target: dev
    env_file:
      - ./localSetup/.env
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
    command: "/bin/sh -c '/start-scripts/wait-for-multiple.sh ltiapi:80;update-ca-certificates; yarn dev:subscribers'"
    volumes:
      - edlib-lti_nodemodules:/var/www/app/node_modules
      - ./sourcecode/apis/lti/src:/var/www/app/src
      - ./sourcecode/apis/lti/.env.defaults:/var/www/app/.env.defaults
      - ./sourcecode/apis/lti/package.json:/var/www/app/package.json
      - ./sourcecode/apis/lti/yarn.lock:/var/www/app/yarn.lock
      - ./localSetup/helpers/start-scripts:/start-scripts
      - ./localSetup/projects/edlib-lti/configurations:/api-config:ro
    depends_on:
      - ltiapi

  authapi:
    build:
      context: ./sourcecode/apis/auth
      dockerfile: Dockerfile
      target: base
    env_file:
      - ./localSetup/.env
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
    command: "/bin/sh -c 'wait-for mysql:3306 && wait-for rabbitmq:5672 && wait-for redis:6379 && update-ca-certificates && yarn && yarn migrate && yarn dev'"
    healthcheck:
      test: [CMD, curl, -f, "http://localhost/_ah/health"]
    volumes:
      - edlib-auth_nodemodules:/var/www/app/node_modules
      - ./sourcecode/apis/auth/src:/var/www/app/src
      - ./sourcecode/apis/auth/.env.defaults:/var/www/app/.env.defaults
      - ./sourcecode/apis/auth/package.json:/var/www/app/package.json
      - ./sourcecode/apis/auth/yarn.lock:/var/www/app/yarn.lock
      - ./localSetup/helpers/start-scripts/wait-for.sh:/usr/local/bin/wait-for
    #      - ./sourcecode/npm/nodeUtils:/var/www/app/node_modules/@cerpus/edlib-node-utils:ro
    depends_on:
      - mysql
      - rabbitmq
      - redis

  urlapi:
    build:
      context: ./sourcecode/apis/url
      dockerfile: Dockerfile
      target: dev
    env_file:
      - ./localSetup/.env
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
    command: "/bin/sh -c '/start-scripts/wait-for-multiple.sh mysql:3306 rabbitmq:5672 elasticsearch:9200;update-ca-certificates; yarn; yarn migrate; yarn dev'"
    healthcheck:
      test: [CMD, curl, -f, "http://localhost/_ah/health"]
    volumes:
      - edlib-url_nodemodules:/var/www/app/node_modules
      - ./sourcecode/apis/url/src:/var/www/app/src
      - ./sourcecode/apis/url/.env.defaults:/var/www/app/.env.defaults
      - ./sourcecode/apis/url/package.json:/var/www/app/package.json
      - ./sourcecode/apis/url/yarn.lock:/var/www/app/yarn.lock
      - ./localSetup/helpers/start-scripts:/start-scripts
    #      - ./sourcecode/npm/nodeUtils:/var/www/app/node_modules/@cerpus/edlib-node-utils:ro
    depends_on:
      - mysql

  www:
    build:
      context: ./sourcecode/www
      dockerfile: Dockerfile
      target: dev
    command: [sh, -c, 'yarn && yarn start']
    environment:
      CLIENT_PUBLIC_PATH: https://www.edlib.local/
      NODE_EXTRA_CA_CERTS: '/usr/local/share/ca-certificates/cacert.pem'
      PUBLIC_PATH: https://www.edlib.local/
    env_file:
      - ./localSetup/.env
    healthcheck:
      test: [CMD, curl, -f, http://localhost:3000]
    volumes:
      - www_nodemodules:/app/node_modules
      - ./data/nginx/ca:/usr/local/share/ca-certificates:ro
      - ./sourcecode/www/src:/app/src
      - ./sourcecode/www/public:/app/public
      - ./sourcecode/www/package.json:/app/package.json
      - ./sourcecode/www/razzle.config.js:/app/razzle.config.js
      - ./sourcecode/www/yarn.lock:/app/yarn.lock

  proxy-admin:
    build:
      context: ./sourcecode/proxies/admin
      dockerfile: Dockerfile
      target: dev
    env_file:
      - ./localSetup/.env
    environment:
      WDS_SOCKET_PATH: /admin/sockjs-node
    healthcheck:
      test: [CMD, curl, -f, http://localhost:3000]
    volumes:
      - proxy-admin_nodemodules:/app/node_modules
      - ./sourcecode/proxies/admin/src:/app/src
      - ./sourcecode/proxies/admin/public:/app/public
      - ./sourcecode/proxies/admin/package.json:/app/package.json
      - ./sourcecode/proxies/admin/yarn.lock:/app/yarn.lock

  proxy-auth:
    build:
      context: ./sourcecode/proxies/auth
      dockerfile: Dockerfile
      target: dev
    env_file:
      - ./localSetup/.env
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
    healthcheck:
      test: [CMD, curl, -f, "http://localhost/_ah/health"]
    volumes:
      - proxy-auth_nodemodules:/var/www/app/node_modules
      - ./sourcecode/proxies/auth/src:/var/www/app/src
      - ./sourcecode/proxies/auth/.env.defaults:/var/www/app/.env.defaults
      - ./sourcecode/proxies/auth/package.json:/var/www/app/package.json
      - ./sourcecode/proxies/auth/yarn.lock:/var/www/app/yarn.lock
  #      - ./sourcecode/npm/nodeUtils:/var/www/app/node_modules/@cerpus/edlib-node-utils:ro

  proxy-lti:
    build:
      context: ./sourcecode/proxies/lti
      dockerfile: Dockerfile
      target: dev
    env_file:
      - ./localSetup/.env
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
    command: "/bin/sh -c '/start-scripts/wait-for-multiple.sh rabbitmq:5672;update-ca-certificates; yarn; yarn dev'"
    healthcheck:
      test: [CMD, curl, -f, "http://localhost/_ah/health"]
    volumes:
      - proxy-lti_nodemodules:/var/www/app/node_modules
      - ./sourcecode/proxies/lti/src:/var/www/app/src
      - ./sourcecode/proxies/lti/.env.defaults:/var/www/app/.env.defaults
      - ./sourcecode/proxies/lti/package.json:/var/www/app/package.json
      - ./sourcecode/proxies/lti/yarn.lock:/var/www/app/yarn.lock
      - ./localSetup/helpers/start-scripts:/start-scripts
  #      - ./sourcecode/npm/nodeUtils:/var/www/app/node_modules/@cerpus/edlib-node-utils:ro

  proxy-resource:
    build:
      context: ./sourcecode/proxies/resource
      dockerfile: Dockerfile
      target: dev
    command: "/bin/sh -c '/start-scripts/wait-for-multiple.sh rabbitmq:5672 authapi:80;update-ca-certificates; yarn; yarn dev'"
    env_file:
      - ./localSetup/.env
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
    healthcheck:
      test: [CMD, curl, -f, "http://localhost/_ah/health"]
    volumes:
      - proxy-resource_nodemodules:/var/www/app/node_modules
      - ./sourcecode/proxies/resource/src:/var/www/app/src
      - ./sourcecode/proxies/resource/.env.defaults:/var/www/app/.env.defaults
      - ./sourcecode/proxies/resource/package.json:/var/www/app/package.json
      - ./sourcecode/proxies/resource/yarn.lock:/var/www/app/yarn.lock
      - ./localSetup/helpers/start-scripts:/start-scripts
    #      - ./sourcecode/npm/nodeUtils:/var/www/app/node_modules/@cerpus/edlib-node-utils:ro
    depends_on:
      - authapi

  edlibapi-url:
    build:
      context: ./sourcecode/proxies/url
      dockerfile: Dockerfile
      target: dev
    env_file:
      - ./localSetup/.env
    healthcheck:
      test: [CMD, curl, -f, "http://localhost/_ah/health"]
    volumes:
      - edlibapi-url_nodemodules:/var/www/app/node_modules
      - ./sourcecode/proxies/url/src:/var/www/app/src
      - ./sourcecode/proxies/url/.env.defaults:/var/www/app/.env.defaults
      - ./sourcecode/proxies/url/package.json:/var/www/app/package.json
      - ./sourcecode/proxies/url/yarn.lock:/var/www/app/yarn.lock
  #      - ./sourcecode/npm/nodeUtils:/var/www/app/node_modules/@cerpus/edlib-node-utils:ro

  npm-components-storybook:
    build:
      context: ./sourcecode/npm/components
      dockerfile: Dockerfile
    healthcheck:
      test: [CMD, curl, -f, http://localhost:9009]
    volumes:
      - ./sourcecode/npm/components:/app
      - npm-components-storybook_nodemodules:/app/node_modules

  common:
    build:
      context: ./sourcecode/apis/common
      target: web
    environment:
      PHP_FPM_HOST: "edlib-common-fpm:9000"
    healthcheck:
      test: [CMD, curl, -f, http://localhost]
    volumes:
      - ./sourcecode/apis/common:/var/www/edlibcommon
    depends_on:
      - edlib-common-fpm

  edlib-common-fpm:
    build:
      context: ./sourcecode/apis/common
      target: dev
    env_file:
      - ./localSetup/.env
    healthcheck:
      test: [CMD, nc, -z, localhost, "9000"]
    volumes:
      - ./sourcecode/apis/common:/var/www/edlibcommon
      - ./data/nginx/ca:/usr/local/share/ca-certificates:ro
    depends_on:
      - mysql

  common-subscribers:
    build:
      context: ./sourcecode/apis/common
      target: dev
    command: /bin/bash -c "set -eux;/start-scripts/wait-for-multiple.sh edlib-common-fpm:9000 rabbitmq:5672;php artisan laravel-rabbitmq-pubsub:consumer"
    env_file:
      - ./localSetup/.env
    volumes:
      - ./localSetup/helpers/start-scripts:/start-scripts
      - ./sourcecode/apis/common:/var/www/edlibcommon
      - ./data/nginx/ca:/usr/local/share/ca-certificates:ro
    depends_on:
      - edlib-common-fpm

  # --------------------------------------------
  # ----- Services needed for edlib facade -----
  # --------------------------------------------
  #  configserver:
  #    image: "hyness/spring-cloud-config-server:1.4.7.RELEASE"
  #    volumes:
  #      - ./localSetup/projects/config-server/settings:/config
  #    environment:
  #      SPRING_PROFILES_ACTIVE: native
  #    healthcheck:
  #      test: [CMD, curl, -f, http://localhost:8888/health]
  #    ports:
  #      - 8888:8888
  #  edlibfacade:
  #    build:
  #      context: ./localSetup/projects/edlibfacade
  #    entrypoint: /before-start.sh
  #    command: bash -c "/start-scripts/wait-for-multiple.sh configserver:8888 nginx:80;/start-app.sh"
  #    depends_on:
  #      - nginx
  #    volumes:
  #      - ./sourcecode/not_migrated/edlibfacade/target/edlibfacade.jar:/app.jar
  #      - ./data/nginx/ca:/cacerts.d:ro
  #      - ./localSetup/helpers/before-start-java.sh:/before-start.sh:ro
  #      - ./localSetup/helpers/start-scripts:/start-scripts
  #    environment:
  #      CONFIGSERVICE_URI: http://configserver:8888
  #      EDLIB_API_URL: https://api.edlib.local
  #      HEAPSPACE_MAX: 128m
  #      DEBUGGING_ENABLED: "yes"
  #    healthcheck:
  #      test: [CMD, curl, -f, http://localhost:8080/health]
  #    ports:
  #      - 5505:5555
