server {
  listen 80;

  server_name
    hub.${EDLIB_ROOT_DOMAIN}
    hub-test.${EDLIB_ROOT_DOMAIN}
    hub-vite-hmr.${EDLIB_ROOT_DOMAIN}
    ~^edlib-hub[a-z0-9-]+\.ngrok\.dev$
  ;

  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl;
  server_name  hub.${EDLIB_ROOT_DOMAIN} ~^edlib-hub[a-z0-9-]+\.ngrok\.dev$;

  ssl_certificate  /etc/ssl/private/cerpus.crt;
  ssl_certificate_key  /etc/ssl/private/cerpus.key;

  root /srv/www/hub/public;

  location / {
    try_files $uri /index.php$is_args$args;
  }

  location ~ \.php$ {
    include fastcgi.conf;
    fastcgi_pass hub:9000;
  }
}

server {
  listen 443 ssl;
  server_name  hub-test.${EDLIB_ROOT_DOMAIN};

  ssl_certificate  /etc/ssl/private/cerpus.crt;
  ssl_certificate_key  /etc/ssl/private/cerpus.key;

  root /srv/www/hub/public;

  location / {
    try_files $uri /index.php$is_args$args;
  }

  location ~ \.php$ {
    include fastcgi.conf;
    fastcgi_pass hub:9000;
    fastcgi_param APP_ENV 'testing';
    fastcgi_param APP_URL https://hub-test.${EDLIB_ROOT_DOMAIN};
  }
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
  listen  443 ssl;
  server_name  hub-vite-hmr.${EDLIB_ROOT_DOMAIN};

  ssl_certificate  /etc/ssl/private/cerpus.crt;
  ssl_certificate_key  /etc/ssl/private/cerpus.key;

  location / {
    set $upstream http://hub-vite;
    proxy_pass  $upstream;

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_read_timeout 86400;
  }
}
