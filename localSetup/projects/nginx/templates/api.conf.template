server {
  listen 80;

  server_name api.${EDLIB_ROOT_DOMAIN};

  return 301 https://api.${EDLIB_ROOT_DOMAIN}$request_uri;
}

server {
  include includes/https.conf;

  server_name  api.${EDLIB_ROOT_DOMAIN};

  location /resources {
    set $upstream  http://proxy-resource;
    proxy_pass              $upstream;
    proxy_set_header        Host            $host;
    proxy_set_header        X-Real-IP       $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location /auth {
    set $upstream  http://proxy-auth;
    proxy_pass              $upstream;
    proxy_set_header        Host            $host;
    proxy_set_header        X-Real-IP       $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location /lti {
    set $upstream  http://proxy-lti;
    proxy_pass              $upstream;
    proxy_set_header        Host            $host;
    proxy_set_header        X-Real-IP       $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
  }

  location /admin/sockjs-node {
    set $upstream  http://proxy-admin:3000;
    proxy_pass $upstream;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  location /admin {
    set $upstream  http://proxy-admin:3000;
    proxy_pass $upstream;
    proxy_set_header        Host            $host;
    proxy_set_header        X-Real-IP       $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location /common {
    set $upstream  http://common;
    proxy_pass              $upstream;
    proxy_set_header        Host            $host;
    proxy_set_header        X-Real-IP       $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
  }
}
